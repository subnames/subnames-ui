// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Viem from "viem";
import * as Ens from "viem/ens";
import * as Constants from "../Constants.res.mjs";
import * as OnChainOperationsCommon from "./OnChainOperationsCommon.res.mjs";

var registryContract = {
  address: Constants.registryContractAddress,
  abi: [
    {
      type: "function",
      name: "recordExists",
      inputs: [{
          name: "node",
          type: "bytes32"
        }],
      outputs: [{
          name: "",
          type: "bool"
        }],
      stateMutability: "view"
    },
    {
      type: "function",
      name: "owner",
      inputs: [{
          name: "node",
          type: "bytes32"
        }],
      outputs: [{
          name: "",
          type: "address"
        }],
      stateMutability: "view"
    }
  ]
};

async function recordExists(name) {
  var domain = name + "." + Constants.sld;
  var node = Ens.namehash(domain);
  console.log("domain: \"" + domain + "\", node: \"" + node + "\"");
  return await OnChainOperationsCommon.publicClient.readContract({
              address: registryContract.address,
              abi: registryContract.abi,
              functionName: "recordExists",
              args: [node]
            });
}

async function owner(name) {
  var domain = name + "." + Constants.sld;
  var node = Ens.namehash(domain);
  return await OnChainOperationsCommon.publicClient.readContract({
              address: registryContract.address,
              abi: registryContract.abi,
              functionName: "owner",
              args: [node]
            });
}

async function getOwner(tokenId) {
  var label = "0x" + tokenId.toString(16).padStart(64, "0");
  var node = Viem.keccak256(Viem.encodePacked([
            "bytes32",
            "bytes32"
          ], [
            Constants.parentNode,
            label
          ]));
  return await OnChainOperationsCommon.publicClient.readContract({
              address: registryContract.address,
              abi: registryContract.abi,
              functionName: "owner",
              args: [node]
            });
}

export {
  registryContract ,
  recordExists ,
  owner ,
  getOwner ,
}
/* viem Not a pure module */
