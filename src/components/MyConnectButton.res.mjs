// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as OnChainOperations from "../OnChainOperations.res.mjs";
import * as Rainbowkit from "@rainbow-me/rainbowkit";

var Custom = {};

var ConnectButton = {
  Custom: Custom
};

function MyConnectButton(props) {
  var match = React.useState(function () {
        return "Loading...";
      });
  var setName = match[1];
  var name = match[0];
  var buttonStyle = {
    background: "rgb(39, 39, 42)",
    border: "none",
    color: "white",
    cursor: "pointer",
    fontSize: "14px",
    fontWeight: "500",
    padding: "8px 16px",
    borderRadius: "14px",
    transition: "background 0.2s ease"
  };
  return React.createElement(Rainbowkit.ConnectButton.Custom, {
              children: (function (props) {
                  var mounted = props.mounted;
                  var openConnectModal = props.openConnectModal;
                  var openChainModal = props.openChainModal;
                  var openAccountModal = props.openAccountModal;
                  var chain = props.chain;
                  var account = props.account;
                  var connected = mounted && Core__Option.isSome(account) && Core__Option.isSome(chain);
                  var ariaHidden = !mounted;
                  var style = mounted ? ({}) : ({
                        opacity: "0",
                        userSelect: "none",
                        pointerEvents: "none"
                      });
                  return React.createElement("div", {
                              "aria-hidden": ariaHidden,
                              style: style
                            }, (function () {
                                  if (connected) {
                                    if (chain.unsupported) {
                                      return React.createElement("button", {
                                                  style: buttonStyle,
                                                  onClick: openChainModal
                                                }, "Wrong network");
                                    } else {
                                      return React.createElement("div", {
                                                  style: {
                                                    display: "flex",
                                                    gap: "12px"
                                                  }
                                                }, React.createElement("button", {
                                                      style: buttonStyle,
                                                      onClick: openAccountModal
                                                    }, (OnChainOperations.name(account.address).then(function (resolvedName) {
                                                            if (resolvedName === "") {
                                                              setName(function (param) {
                                                                    return account.displayName;
                                                                  });
                                                            } else {
                                                              setName(function (param) {
                                                                    return resolvedName;
                                                                  });
                                                            }
                                                            return Promise.resolve();
                                                          }), name), Core__Option.isSome(account.displayBalance) ? " (" + account.displayBalance + ")" : null));
                                    }
                                  } else {
                                    return React.createElement("button", {
                                                "data-testid": "rk-connect-button",
                                                style: buttonStyle,
                                                onClick: openConnectModal
                                              }, "Connect Wallet");
                                  }
                                })());
                })
            });
}

var make = MyConnectButton;

export {
  ConnectButton ,
  make ,
}
/* react Not a pure module */
