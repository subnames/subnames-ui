// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as InputPanel from "./components/InputPanel.res.mjs";
import * as NameContext from "./NameContext.res.mjs";
import * as ResultPanel from "./components/ResultPanel.res.mjs";
import * as TransferPanel from "./components/TransferPanel.res.mjs";
import * as JsxPPXReactSupportU from "rescript/lib/es6/jsxPPXReactSupportU.js";
import * as RegisterExtendPanel from "./components/RegisterExtendPanel.res.mjs";

var initialState = {
  name: "",
  panel: "input",
  action: "Register",
  result: undefined,
  inputPanelKey: "initial"
};

function SubnameInput(props) {
  var isWalletConnected = props.isWalletConnected;
  var match = React.useContext(NameContext.context);
  var setForceRefresh = match.setForceRefresh;
  var match$1 = React.useState(function () {
        return initialState;
      });
  var setState = match$1[1];
  var state = match$1[0];
  var onSuccess = function (result) {
    setState(function (prev) {
          return {
                  name: prev.name,
                  panel: "result",
                  action: prev.action,
                  result: result,
                  inputPanelKey: prev.inputPanelKey
                };
        });
    setForceRefresh(function (param) {
          return true;
        });
  };
  var onNext = function (name, action) {
    setState(function (prev) {
          var tmp;
          switch (action) {
            case "Register" :
                tmp = "register";
                break;
            case "Extend" :
                tmp = "extend";
                break;
            case "Transfer" :
                tmp = "transfer";
                break;
            case "Reclaim" :
                throw {
                      RE_EXN_ID: "Failure",
                      _1: "Invalid action",
                      Error: new Error()
                    };
            
          }
          return {
                  name: name,
                  panel: tmp,
                  action: action,
                  result: prev.result,
                  inputPanelKey: prev.inputPanelKey
                };
        });
  };
  var match$2 = state.panel;
  var tmp;
  var exit = 0;
  switch (match$2) {
    case "input" :
        tmp = JsxPPXReactSupportU.createElementWithKey(state.inputPanelKey, InputPanel.make, {
              onNext: onNext,
              isWalletConnected: isWalletConnected,
              initialValue: state.name
            });
        break;
    case "extend" :
    case "register" :
        exit = 1;
        break;
    case "result" :
        tmp = React.createElement(ResultPanel.make, {
              name: state.name,
              onRegisterAnother: (function () {
                  setState(function (param) {
                        return initialState;
                      });
                }),
              actionResult: state.result
            });
        break;
    case "transfer" :
        tmp = React.createElement(TransferPanel.make, {
              name: state.name,
              onCancel: (function () {
                  setState(function (prev) {
                        var newKey = Date.now().toString();
                        return {
                                name: prev.name,
                                panel: "input",
                                action: prev.action,
                                result: prev.result,
                                inputPanelKey: newKey
                              };
                      });
                }),
              onSuccess: onSuccess,
              buttonType: "close"
            });
        break;
    default:
      tmp = React.createElement("div", undefined);
  }
  if (exit === 1) {
    tmp = React.createElement(RegisterExtendPanel.make, {
          name: state.name,
          isWalletConnected: isWalletConnected,
          onBack: (function () {
              setState(function (prev) {
                    console.log(prev);
                    var newKey = Date.now().toString();
                    return {
                            name: prev.name,
                            panel: "input",
                            action: prev.action,
                            result: prev.result,
                            inputPanelKey: newKey
                          };
                  });
            }),
          onSuccess: onSuccess,
          action: state.action
        });
  }
  return React.createElement("div", {
              className: "w-full max-w-xl mx-auto"
            }, tmp);
}

var make = SubnameInput;

export {
  make ,
}
/* react Not a pure module */
