// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";
import * as OnChainOperationsCommon from "../OnChainOperationsCommon.res.mjs";

function Profile(props) {
  var match = React.useState(function () {
        return "";
      });
  var setDescription = match[1];
  var match$1 = React.useState(function () {
        return "";
      });
  var setLocation = match$1[1];
  var match$2 = React.useState(function () {
        return "";
      });
  var setTwitter = match$2[1];
  var match$3 = React.useState(function () {
        return "";
      });
  var setTelegram = match$3[1];
  var match$4 = React.useState(function () {
        return "";
      });
  var setGithub = match$4[1];
  var match$5 = React.useState(function () {
        return "";
      });
  var setWebsite = match$5[1];
  var match$6 = React.useState(function () {
        return "";
      });
  var setEmail = match$6[1];
  var match$7 = React.useState(function () {
        return false;
      });
  var setLoading = match$7[1];
  var loading = match$7[0];
  var match$8 = React.useState(function () {
        
      });
  var setError = match$8[1];
  var error = match$8[0];
  var handleSubmit = function ($$event) {
    $$event.preventDefault();
    var updateProfile = async function () {
      setLoading(function (param) {
            return true;
          });
      setError(function (param) {
            
          });
      try {
        var walletClient = Core__Option.getExn(OnChainOperationsCommon.buildWalletClient(), "Wallet connection failed");
        await OnChainOperationsCommon.currentAddress(walletClient);
        console.log("Profile updated successfully!");
      }
      catch (raw_error){
        var error = Caml_js_exceptions.internalToOCamlException(raw_error);
        setError(function (param) {
              return "Failed to update profile";
            });
        console.log("Error updating profile:", error);
      }
      return setLoading(function (param) {
                  return false;
                });
    };
    updateProfile();
  };
  return React.createElement("div", {
              className: "max-w-2xl mx-auto p-4"
            }, React.createElement("h1", {
                  className: "text-2xl font-bold mb-6"
                }, "Edit Profile"), React.createElement("form", {
                  onSubmit: handleSubmit
                }, React.createElement("div", {
                      className: "space-y-4"
                    }, React.createElement("div", undefined, React.createElement("label", {
                              className: "block text-sm font-medium mb-1"
                            }, "Description"), React.createElement("textarea", {
                              className: "w-full p-2 border rounded",
                              rows: 3,
                              value: match[0],
                              onChange: (function ($$event) {
                                  setDescription(function (param) {
                                        return $$event.target.value;
                                      });
                                })
                            })), React.createElement("div", undefined, React.createElement("label", {
                              className: "block text-sm font-medium mb-1"
                            }, "Location"), React.createElement("input", {
                              className: "w-full p-2 border rounded",
                              type: "text",
                              value: match$1[0],
                              onChange: (function ($$event) {
                                  setLocation(function (param) {
                                        return $$event.target.value;
                                      });
                                })
                            })), React.createElement("div", undefined, React.createElement("label", {
                              className: "block text-sm font-medium mb-1"
                            }, "X (Twitter)"), React.createElement("input", {
                              className: "w-full p-2 border rounded",
                              placeholder: "username",
                              type: "text",
                              value: match$2[0],
                              onChange: (function ($$event) {
                                  setTwitter(function (param) {
                                        return $$event.target.value;
                                      });
                                })
                            })), React.createElement("div", undefined, React.createElement("label", {
                              className: "block text-sm font-medium mb-1"
                            }, "Telegram"), React.createElement("input", {
                              className: "w-full p-2 border rounded",
                              placeholder: "username",
                              type: "text",
                              value: match$3[0],
                              onChange: (function ($$event) {
                                  setTelegram(function (param) {
                                        return $$event.target.value;
                                      });
                                })
                            })), React.createElement("div", undefined, React.createElement("label", {
                              className: "block text-sm font-medium mb-1"
                            }, "GitHub"), React.createElement("input", {
                              className: "w-full p-2 border rounded",
                              placeholder: "username",
                              type: "text",
                              value: match$4[0],
                              onChange: (function ($$event) {
                                  setGithub(function (param) {
                                        return $$event.target.value;
                                      });
                                })
                            })), React.createElement("div", undefined, React.createElement("label", {
                              className: "block text-sm font-medium mb-1"
                            }, "Website"), React.createElement("input", {
                              className: "w-full p-2 border rounded",
                              placeholder: "https://",
                              type: "url",
                              value: match$5[0],
                              onChange: (function ($$event) {
                                  setWebsite(function (param) {
                                        return $$event.target.value;
                                      });
                                })
                            })), React.createElement("div", undefined, React.createElement("label", {
                              className: "block text-sm font-medium mb-1"
                            }, "Email"), React.createElement("input", {
                              className: "w-full p-2 border rounded",
                              placeholder: "your@email.com",
                              type: "email",
                              value: match$6[0],
                              onChange: (function ($$event) {
                                  setEmail(function (param) {
                                        return $$event.target.value;
                                      });
                                })
                            })), error !== undefined ? React.createElement("div", {
                            className: "text-red-500 text-sm"
                          }, error) : null, React.createElement("button", {
                          className: "w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600 disabled:bg-gray-400",
                          disabled: loading,
                          type: "submit"
                        }, loading ? "Saving..." : "Save Profile"))));
}

var make = Profile;

export {
  make ,
}
/* react Not a pure module */
