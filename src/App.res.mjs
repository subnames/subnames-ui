// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Wagmi from "wagmi";
import * as SubnameInput from "./SubnameInput.res.mjs";
import * as Chains from "wagmi/chains";
import * as JsxRuntime from "react/jsx-runtime";
import * as ReactQuery from "@tanstack/react-query";
import * as Rainbowkit from "@rainbow-me/rainbowkit";

var queryClient = new ReactQuery.QueryClient();

var transports = new Map();

transports.set(Chains.koi.id, Wagmi.http());

var config = Rainbowkit.getDefaultConfig({
      appName: "Subnames App",
      projectId: "873f70fa626990b1ee3c14d55130a573",
      chains: [Chains.koi],
      transports: transports,
      ssr: false
    });

function App$Layout(props) {
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("header", {
                      children: JsxRuntime.jsx("div", {
                            children: JsxRuntime.jsxs("div", {
                                  children: [
                                    JsxRuntime.jsx("div", {
                                          children: JsxRuntime.jsx("h1", {
                                                children: "ringdao.eth",
                                                className: "text-xl font-bold text-gray-900"
                                              }),
                                          className: "flex-shrink-0"
                                        }),
                                    JsxRuntime.jsx("div", {
                                          children: JsxRuntime.jsx(Rainbowkit.ConnectButton, {
                                                label: "Connect",
                                                accountStatus: "address"
                                              }),
                                          className: "flex items-center"
                                        })
                                  ],
                                  className: "flex justify-between items-center h-16"
                                }),
                            className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"
                          })
                    }),
                JsxRuntime.jsx("main", {
                      children: JsxRuntime.jsx("div", {
                            children: props.children,
                            className: "max-w-7xl mx-auto py-6 sm:px-6 lg:px-8"
                          })
                    })
              ],
              className: "min-h-screen bg-gray-50"
            });
}

function App$Subname(props) {
  var match = React.useState(function () {
        return [
                "",
                false
              ];
      });
  var setValidSubname = match[1];
  var handleValidChange = function (value, isValid) {
    setValidSubname(function (param) {
          return [
                  value,
                  isValid
                ];
        });
  };
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsx(SubnameInput.make, {
                    onValidChange: handleValidChange
                  }),
              className: "p-8"
            });
}

function App(props) {
  return JsxRuntime.jsx(Wagmi.WagmiProvider, {
              config: config,
              children: JsxRuntime.jsx(ReactQuery.QueryClientProvider, {
                    client: queryClient,
                    children: JsxRuntime.jsx(Rainbowkit.RainbowKitProvider, {
                          children: JsxRuntime.jsx(App$Layout, {
                                children: JsxRuntime.jsx(App$Subname, {})
                              })
                        })
                  })
            });
}

var make = App;

export {
  make ,
}
/* queryClient Not a pure module */
